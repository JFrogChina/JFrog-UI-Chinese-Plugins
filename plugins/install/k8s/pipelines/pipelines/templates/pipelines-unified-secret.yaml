{{- if .Values.pipelines.unifiedSecretInstallation }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "pipelines.name" . }}-unified-secret
  labels:
    app: {{ template "pipelines.name" . }}
    chart: {{ template "pipelines.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
type: Opaque
stringData:

{{- if not .Values.systemYamlOverride.existingSecret }}
  system.yaml: |
{{ tpl .Values.pipelines.systemYaml . | indent 4 }}
{{- end}}

{{- if .Values.pipelines.customSecrets }}
{{- range .Values.pipelines.customSecrets }}
  {{ .key }}: |
{{ .data | indent 4 -}}
{{- end }}
{{- end }}

data:
  {{- if or .Values.pipelines.masterKey .Values.global.masterKey }}
  {{- if not (or .Values.pipelines.masterKeySecretName .Values.global.masterKeySecretName) }}
  master-key: {{ include "pipelines.masterKey" . | b64enc | quote }}
  {{- end }}
  {{- end }}
  {{- if or .Values.pipelines.joinKey .Values.global.joinKey }}
  {{- if not (or .Values.pipelines.joinKeySecretName .Values.global.joinKeySecretName) }}
  join-key: {{ include "pipelines.joinKey" . | b64enc | quote }}
  {{- end }}
  {{- end }}

  {{- if and .Values.buildPlane.dynamic.provider.aws.enabled (not .Values.buildPlane.dynamic.provider.aws.existingSecret) }}
  accessKey: {{ .Values.buildPlane.dynamic.provider.aws.accessKey | b64enc | quote }}
  secretKey: {{ .Values.buildPlane.dynamic.provider.aws.secretKey | b64enc | quote }}
  {{- end }}

  {{- if and .Values.buildPlane.dynamic.provider.k8s.enabled (not .Values.buildPlane.dynamic.provider.k8s.existingSecret) }}
  kubeconfig: {{ .Values.buildPlane.dynamic.provider.k8s.kubeconfig | quote }}
  {{- end }}

  {{- if and (not .Values.global.postgresql.existingSecret) (not .Values.postgresql.existingSecret) }}
  {{- if .Values.global.postgresql.url }}
  postgresql-url: {{ .Values.global.postgresql.url | b64enc }}
  {{- else if .Values.postgresql.enabled }}
  postgresql-password: {{ .Values.postgresql.postgresqlPassword | b64enc | quote }}
  postgresql-url: {{ (printf "postgres://%s:%s@%s-postgresql:%v/%s?sslmode=disable" .Values.postgresql.postgresqlUsername .Values.postgresql.postgresqlPassword .Release.Name .Values.postgresql.service.port .Values.postgresql.postgresqlDatabase) | b64enc }}
  {{- else if and (not .Values.postgresql.enabled) (.Values.global.postgresql.ssl) }}
  postgresql-password: {{ tpl .Values.global.postgresql.password . | b64enc | quote }}
  postgresql-url: {{ tpl (printf "postgres://%s:%s@%v:%v/%s?sslmode=require" .Values.global.postgresql.user .Values.global.postgresql.password .Values.global.postgresql.host .Values.global.postgresql.port .Values.global.postgresql.database) . | b64enc }}
  {{- else }}
  postgresql-password: {{ tpl .Values.global.postgresql.password . | b64enc | quote }}
  postgresql-url: {{ tpl (printf "postgres://%s:%s@%v:%v/%s?sslmode=disable" .Values.global.postgresql.user .Values.global.postgresql.password .Values.global.postgresql.host .Values.global.postgresql.port .Values.global.postgresql.database) . | b64enc }}
  {{- end }}
  {{- end }}

{{- end }}